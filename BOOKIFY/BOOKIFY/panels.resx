<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="sideBarTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="printDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>139, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIBUAAAEAIAD8CgAAFgAAACgAAAAgAAAAKgAAAAEAIAAAAAAAgAoAAK4bAACuGwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFxSEABZUA8BXVMQA1lQDwNTSg4DU0oOA1NK
        DgJUSw4CZVoRAW1hEgFNRA0BPjcLATw1CgA+NwsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABeUxAAcGQTAGpfEjVrXxJfaF0REWtfEnZsYBKvbGASrGtg
        EqtrYBKqbGASqGxgEqhtYRKmbWESpmxgEqRsYBKja18SomtfEqFsYBKfbGASnm1hEpxtYRKbbGASmGtf
        EpZsYBKUbGASkmtgEotqXhIpal8SPGtfEk1nXBEEZ1wRAGBWEAA/NwwBbGASnm1hEvJqXxI/bGASu21h
        Ev9tYRL/bWES/21hEv9tYRL/bWES/21hEv9tYRL/bWES/21hEv9tYRL/bWES/21hEv9tYRL/bWES/21h
        Ev9tYRL/bWES/21hEv9tYRL/bWES+2pfElxsYBK8bGES3mleEhxpXhIAXlQQAHFlEwBqXxI4a18SZWhc
        EQ9rYBJfa18Sk2tfEo9rXxKOa18SjGtfEoprXxKIbGASi21hEotrYBKLa18Si2tfEo1rXxKPbWESkWtg
        EpJrXxKUa18Sl2xgEphtYRKZbGASm2tfEp5rXxKTaV4SImtfEk5rXxJhZ1wRB2hcEQAAAAAAAAAAAAAA
        AABNRA0AdmkUAGtfEmxsYBLFbGASwmxgEr5sYBK5bGASs2tgErBsYBKxbGASr2xgEqdrYBKda18SnWxg
        EqBsYBKda2ASlWtfEpNrXxKWbGASkWtgEoVrXxKEbGASkWxgEolqXhIWaV4SAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFlQDwCSgRgAbGASmm1hEv9tYRL/bWES/21hEv9tYRL/bWES/21hEv9tYRL/bWES/21h
        Ev9tYRL/bWES/21hEv9tYRL/bWES/21hEv9tYRL/bWES/21hEv9tYRL/bWES8WpeEjdrXxIAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAX1QQAEQ9DAFsYBKjbWES/21hEv9tYRL/bWES/21hEv9tYRL/bWES/21h
        Ev9tYRL/bWES/21hEv9tYRL/bWES/21hEv9tYRL/bWES/21hEv9tYRL/bWES/21hEv9tYRL4a18SRWxg
        EgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABjWBAAX1UQA2xgEqxtYRL/bWES/21hEv9tYRL/bWES/21h
        Ev9tYRL/bWES/21hEv9tYRL/bWES/21hEv9tYRL/bWES/21hEv9tYRL/bWES/21hEv9tYRL/bWES/21h
        Ev1rXxJVbGASAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGFWEABfVRAFbGASsm1hEv9tYRL/bGES32tg
        EqdrXxKsa2ASq2xgEqNtYRK+bWES/m1hEv9tYRL/bWES/2xhEtpsYBKwbGASsW1hEq5sYBKsbGASr21h
        EvVtYRL/bWES/2tfEmVtYRIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYVYQAF9VEAVsYBK0bWES/21h
        Ev9sYBKkYFUREV9VERVgVREVXFIQCmtgElVtYRL9bWES/21hEv9tYRL/a2ASjlpQEA9eVBAWZlsSEWRZ
        EhNqXhIhbWES421hEv9tYRL/a2ASdm9jEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiVxAAYFUQBGxg
        ErBtYRL/bWES/2xgEqdlWxIQZ10SFGBVERNaURALal4SUW1hEvxtYRL/bWES/21hEv9rYBKRYVcRDGRa
        EhRdUxAOXVMQE2hdEh5sYBLhbWES/21hEv9sYBKGcWQSAE1FDQAAAAAAAAAAAAAAAAAAAAAAAAAAAGFW
        EABORQ4BbGASpG1hEv9tYRL/bGASs2ZbESZmWxIZZ1wSEmVaEgtsYBJObWES+21hEv9tYRL/bWES/2xh
        EpRkWRIMZ1wSFWVaEg1kWRITaV0SHGxhEt9tYRL/bWES/2xgEotxZBMATkUNAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAV00OAHJmEwBrYBJ9bWES/21hEv9tYRL0bGAS02peElFpXRIzaV0SMGxgEmhtYRL9bWES/21h
        Ev9tYRL/bGASvWpeElRnWxIlZlsSDGdcEhRrYBIabWES3W1hEv9tYRL/bGASgnFkEwBNRA0AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAa18SAGpeEi1tYRLdbWES/21hEv9tYRL/bWES521hEuNtYRLlbWES7W1h
        Ev9tYRL6bWES9G1hEv9tYRL+bWES9WtfEndqXhJNal8SY2tfElptYRLsbWES/21hEv9rXxJobmISAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABlWhAAnY0fAGtfEkxsYBLXbWES/21hEv9tYRL/bWES/21h
        Ev9tYRL/bWES+mxgEo9rXxJlbWES7W1hEv9tYRL/bWES+W1hEvVtYRL6bWES921hEv9tYRL/bWES5Wpe
        EjBrXxIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkWBEAAAAAAGpeEiNrYBJ4bGASumxg
        EtlsYRLhbGAS12xgErRrXxJgaF0RC2BVEAJrXxJgbWES5W1hEv9tYRL/bWES/21hEv9tYRL/bWES/21h
        EulrXxJlXFEOAWZbEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWlAPAEY/
        DABmWxEIaV4RGGtfER9pXREXZVoRB45+GABNRA0AZlsRAGNXEAJqXhIybGASimxgEsNsYBLZbGAS2mxg
        EsdsYBKSal8SOGVZEAJnWxEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGFXEABfVRABZ1wRC2hd
        ERhoXREZZ1wRDWBWEAFiWBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////////gA
        ///AAAABgAAAAcAAAAH4AAAP+AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/gAAA/4AAAP/AAAD/4A
        AA//g4Af///gf/////8=
</value>
  </data>
</root>